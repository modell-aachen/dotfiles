_pseudo-install()
{
    local cur prev opts places paths
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    opts="-A -C -E -G -L -N -c -d -e -f -l -m -u core all default developer -s"
    places=($(perl -e 'my $x = do "$ENV{HOME}/.buildcontrib"; print join(" ", @{$x->{"pseudo-install"}{extensions_path}});'))

    if [[ ${cur} == -* ]] ; then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
        return 0
    fi
    case "${prev}" in
        -e)
            for i in ${places}; do
                paths=$(${paths} find ${i} -mindepth 1 -maxdepth 1  -type d -printf %f\\n);
            done
            COMPREPLY=( $(compgen -W "${paths}" -- ${cur}) )
            return 0
            ;;
        -u)
            for i in ${places}; do
                paths=$(${paths} find ${i} -mindepth 1 -maxdepth 1  -type d -printf %f\\n);
            done
            COMPREPLY=( $(compgen -W "${paths}" -- ${cur}) )
            return 0
            ;;
        *)
        ;;
    esac

    COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
    return 0
}
complete -F _pseudo-install ./pseudo-install.pl

_pseudo-install2()
{
    local cur prev places paths
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    places=$(perl -e 'my $x = do "$ENV{HOME}/.buildcontrib"; print join(" ", @{$x->{"pseudo-install"}{extensions_path}});')
    for i in ${places}; do
        paths="${paths}$(find ${i} -maxdepth 1 -mindepth 1 -type d \( -name '*Plugin' -o -name '*Contrib' -o -name '*Skin' \) -printf %f\\n)";
    done
    COMPREPLY=( $(compgen -W "${paths} core" -- ${cur}) )
    return 0
}
complete -F _pseudo-install2 pseudo-install

if [ -f /usr/bin/qwiki ] && [ ! -f "$HOME/.qwiki_completion" ] ; then
    qwiki config init > /dev/null
    qwiki completion > $HOME/.qwiki_completion
fi

[ -f /usr/bin/qwiki ] && source $HOME/.qwiki_completion
